name: Contextive per Runtime Build
on:
  workflow_call:
    inputs:
      dotnet_runtime:
        required: true
        type: string
      os:
        required: true
        type: string
      vsce_platform:
        required: true
        type: string
env:
  DOTNET_VERSION: '8.0.x'
jobs:

  language-server:
    name: Language Server
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet

      - name: Build
        id: build
        run: dotnet fsi language-server/build.fsx -- -r ${{ inputs.dotnet_runtime }}
        working-directory: src

      - name: Language Server Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Contextive.LanguageServer-${{inputs.dotnet_runtime}}
          path: ${{ steps.build.outputs.artifact-path }}

      - uses: ./.github/actions/upload-reports
        if: always()
        with:
          name: 'Contextive Language Server'
          reporter: dotnet-trx

  vscode:
    name: VsCode Extension
    needs:
      - language-server
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Language Server Artifact
        uses: actions/download-artifact@v4
        with:
          name: Contextive.LanguageServer-${{ inputs.dotnet_runtime }}
          path: src/

      - run: echo "XDG_RUNTIME_DIR=/run/user/$(id -u)" >> $GITHUB_ENV
      - run: echo "DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/bus" >> $GITHUB_ENV

      - name: Build
        id: build
        run: dotnet fsi vscode/build.fsx -- -r ${{ inputs.dotnet_runtime }} --vsce-platform ${{ inputs.vsce_platform }}
        working-directory: src

      - name: VsCode Extension Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Contextive-VsCode-Extension-${{inputs.vsce_platform}}.vsix
          path: "src/vscode/contextive/*.vsix"
          if-no-files-found: error

      - uses: ./.github/actions/upload-reports
        if: always()
        with:
          name: 'Contextive VsCode Extension'
          reporter: java-junit

  visualstudio:
    name: Visual Studio Extension
    if: ${{ inputs.os == 'windows-latest' }}
    needs:
      - language-server
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet

      - name: Language Server Artifact
        uses: actions/download-artifact@v4
        with:
          name: Contextive.LanguageServer-${{ inputs.dotnet_runtime }}
          path: src

      - name: Build
        id: build
        run: dotnet fsi visualstudio/build.fsx -- -r ${{ inputs.dotnet_runtime }}
        working-directory: src
      
      - name: Visual Studio Extension Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Contextive-VisualStudio-Extension.vsix
          path: "src/visualstudio/contextive/contextive/bin/Release/net8.0-windows7.0/contextive.vsix"
          if-no-files-found: error

      # TODO: Uncomment once we have tests
      # - uses: ./.github/actions/upload-reports
      #   if: always()
      #   with:
      #     name: 'Contextive Visual Studio Extension'
      #     reporter: java-junit

  cli:
    name: Cli
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet

      - name: Build
        id: build
        run: dotnet fsi cli/build.fsx -- -r ${{ inputs.dotnet_runtime }}
        working-directory: src

      - name: Cli Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Contextive.Cli-${{inputs.dotnet_runtime}}
          path: ${{ steps.build.outputs.artifact-path }}

      - uses: ./.github/actions/upload-reports
        if: always()
        with:
          name: 'Contextive Cli'
          reporter: dotnet-trx